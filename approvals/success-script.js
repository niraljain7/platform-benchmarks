// Auto-generated by the postman-to-k6 converter

import "/home/k6/libs/shim/core.js";
import "/home/k6/libs/shim/expect.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    BaseURL: "dev3.nslhub.com",
    IamURL: "https://iam.nslhub.com",
    SuperAdminTenant: "Super-Admin",
    TenantName: "apidev30604",
    TenantAdmin: "admin@nslhub.com",
    AdminPassword: "admin",
    CCORoleId: 335558245178,
    RoleCCO: "CCO",
    UserCCOManager: "userccomanager",
    UserCCO: "usercco",
    UserCCO1: "usercco1",
    UserCCOId: 593907215541,
    UserCCO1Id: 1920848438851,
    CCHRoleId: 813548418854,
    RoleCCH: "CCH",
    UserCCH: "usercch",
    CCARoleId: 2007417977798,
    RoleCCA: "CCA",
    UserCCA: "usercca",
    Password: "test",
    BearerToken:
      "bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJpZEIzdjVrTzBfSzNTcGdOcGVuUTN5OE0ta2YtNVYxQVJLSTJVQ3FkZVhRIn0.eyJqdGkiOiIyMjkyMGIzYi1mY2VmLTQyZmQtOWIxNi0xZDIzMDZkZGRmY2MiLCJleHAiOjE2NDkyNTA2OTEsIm5iZiI6MCwiaWF0IjoxNjQ5MjQ4ODkxLCJpc3MiOiJodHRwczovL2lhbS5uc2xodWIuY29tL2F1dGgvcmVhbG1zL2FwaWRldjMwNjA0IiwiYXVkIjoiYWNjb3VudCIsInN1YiI6ImUxOTAwZWNjLTA1MjQtNDZhMi04ZjYwLWZjNzEwNGE3MDE3MiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImFwaWRldjMwNjA0X3N0YWdpbmciLCJhdXRoX3RpbWUiOjAsInNlc3Npb25fc3RhdGUiOiJiMTdiOWYwNC1iYThiLTQwOGItODZhZi05YTE4MGM0NzY3MGMiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIioiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6InByb2ZpbGUgZW1haWwiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsIm5hbWUiOiJzdGFnZSBhZG1pbiIsInByZWZlcnJlZF91c2VybmFtZSI6InN0YWdlYWRtaW5AbnNsaHViLmNvbSIsImdpdmVuX25hbWUiOiJzdGFnZSIsImZhbWlseV9uYW1lIjoiYWRtaW4iLCJlbWFpbCI6InN0YWdlYWRtaW5AbnNsaHViLmNvbSJ9.g_Wlyx-_fGEdvAnaRflMF9i07kwu80e_BSSdaV0kLcb2baRScqIt0MnMDbE8lvZMiyb_K7-vsgXN6JBVpv1zu-u4PMITBmJvIrUH0EvJPSdbdncTb1WoJSuWUWQCFgVu1pMTcNOEaZLZth_LFJlHmLyONukN8BH4DoaKj3XORF3aZgctu2TWUQ3foRe1Gnwf47Y1K9L5MnF5bzU7E-_uJgwziPyb5LVFPHHyjmdyqyzet2dmd3M1fEBS8wNCMjhvXMQBPW3iHzzi79gg-JHJtqcDjNRt2ZHJLBjidiprzn7WOfcKr9a73st40qBB7dLSaSoJpM7z7daGUc7d6-ECCw",
    TenantName2: "apidev3ei0406",
    TenantAdmin2: "admin@nslhub.com",
    AdminPassword2: "admin",
    DsdFileStoreURL: "https://ava-nlg-dev.nslhub.com",
    RefreshToken:
      "eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJmYzg5MjMzOS1hMTMxLTQxYjAtODc0Yy1mMmY5MDk2NGI1ZTYifQ.eyJqdGkiOiJhODg0NjQwOS01ODY4LTRmOWYtODIxZC0wOTBkZDJiMTRhNmEiLCJleHAiOjE2NDkyNTI0OTEsIm5iZiI6MCwiaWF0IjoxNjQ5MjQ4ODkxLCJpc3MiOiJodHRwczovL2lhbS5uc2xodWIuY29tL2F1dGgvcmVhbG1zL2FwaWRldjMwNjA0IiwiYXVkIjoiaHR0cHM6Ly9pYW0ubnNsaHViLmNvbS9hdXRoL3JlYWxtcy9hcGlkZXYzMDYwNCIsInN1YiI6ImUxOTAwZWNjLTA1MjQtNDZhMi04ZjYwLWZjNzEwNGE3MDE3MiIsInR5cCI6IlJlZnJlc2giLCJhenAiOiJhcGlkZXYzMDYwNF9zdGFnaW5nIiwiYXV0aF90aW1lIjowLCJzZXNzaW9uX3N0YXRlIjoiYjE3YjlmMDQtYmE4Yi00MDhiLTg2YWYtOWExODBjNDc2NzBjIiwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6InByb2ZpbGUgZW1haWwifQ.zX90WLQ2FPJOiT3ADOh6HiWWihkypqKMnH_ipKRxTVg",
    WaitTime: 30000,
    NUMBER: "",
    COUNT: "",
    OuCCO: "oucco",
    TraceAuditRole: "auditdata",
    UserCCA1: "usercca1",
    UserCCH1: "usercch1",
    UserOuCCO: "useroucco",
    UserOuCCO1: "useroucco1",
    AuditDesigner: "auditdesigner",
    AuditReviewer: "auditreviewer",
    UserCCOEmailId: "usercco@nslhub.com",
    UserCCHEmailId: "usercch@nslhub.com",
    UserCCAEmailId: "usercca@nslhub.com",
    UserCCO1EmailId: "usercco1@nslhub.com",
    UserCCOManagerEmailId: "userccomanager@nslhub.com",
    UserCCA1EmailId: "usercca1@nslhub.com",
    UserCCH1EmailId: "usercch1@nslhub.com",
    TenantNameStage: "apidev30604stage",
    TenantNameProd: "apidev30604prod",
    TenantNameStageClientId: "apidev30604_staging",
    SuperAdminUserName: "platformadmin@nslhub.com",
    SuperAdminPassword: "padmin@123",
    SaasTenantAdmin: "admin@nslhub.com",
    SaasRoleCCO: "CCO",
    SaasRoleCCH: "CCH",
    SaasRoleCCA: "CCA",
    SaasUserCCO: "usercco",
    SaasUserCCH: "usercch",
    SaasUserCCA: "usercca",
    SaasTenantName: "apidevsaas0501",
    SuperAdminUserId: "-827185515",
    SuperAdminUser: "platformadmin",
    SaasTenantId: 14789,
    TenantAdminId: 526465925068,
    UserCCHId: 1966367738567,
    UserCCAId: 1066809678568,
    UserCCOManagerId: 415399417079,
    UserCCA1Id: 1547374920491,
    UserCCH1Id: 1515711110926,
    UserOuCCOId: 546131848479,
    UserOuCCOId1: 506898375241,
    AuditDesignerId: 1330339141767,
    GN: "",
    SolutionPublisher: "SolutionPublisher",
    SolutionPublisherId: 1316690504189,
    AuditReviewerId: 1183759007167,
    TraceAuditRoleId: 1295184234566,
    Tenant2AdminId: 1069336758684,
    AuditDesignerEmailId: "auditdesigner@nslhub.com",
    SAASAdminUserId: 833547929647,
    SaasUserCCOId: 966184586997,
    SaasUserCCHId: 1431559285068,
    SaasUserCCAId: 1307374727679,
    SaasUserCCO1Id: 1674147869834,
    SaasUserCCOManagerId: 827582143848,
    OuCCOId: 1203871366098,
    T2UserCCOId: 17835596016,
    T2CCORoleId: 217157188239,
    EmployeeUser: "employeeuser",
    EmployeeUserId: 179286340996,
    FinanceUser: "financeuser",
    FinanceUserId: 756163459539,
    FinanceUser1: "financeuser1",
    FinanceUserId1: "1261127081483",
    EmployeeUser1: "employeeuser1",
    EmployeeUserId1: "1171903273557",
    ManagerUser: "manageruser",
    ManagerUserId: 874359087277,
    ManagerUser1: "manageruser1",
    ManagerUserId1: "695906979279",
    RoleManager: "Manager",
    ManagerRoleId: 681686809459,
    RoleEmployee: "Employee",
    EmployeeRoleId: 1024769196547,
    RoleFinance: "Finance",
    FinanceRoleId: 1400906471471,
    ManagerUser1Id: 2014393822253,
    FinanceUser1Id: 2094608123718,
    SolutionId:1479665240150,
    EntityId:1125583457112,
    CuId: 1217982231832
  }
});

export default function() {
  postman[Request]({
    name:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/login/v2/login-action",
    id: "a8fd8abd-a1f6-4f94-a704-f9c00497bbfb",
    method: "POST",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-iam/api/login/v2/login-action",
    data:
      '{\n    "userName": "{{UserCCO}}",\n    "encryptedPassword": "J8JAIlEDnLvsHzljoQJ4VcWCdcVNJTYzWlc7yZaTRcH5roLNs6trxwD+Ax/XCy3UvJzxSDNLVaa2a7YVcVddeHC6oXuFMf0pNxYWTGi4Tl+ha36Y0DPd4VBFeqvRfDvB2UnUSR+vfIJ56c8SNe0E644yjrCwxXWqAE2B0jTQgfA=",\n    "tenantName": "{{TenantName}}",\n    "clientId": "{{TenantName}}"\n}',
    headers: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": "application/json",
      "Accept-Language": "en"
    },
    pre() {
    },
    post(response) {
      pm.test("Check status code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });

      pm.environment.set(
        "BearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "RefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    }
  });

  postman[Request]({
    name: "GET Approvals List",
    id: "114c1440-c6c2-48d1-b138-c7d4fba45167",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-approvals/api/review/details/{{SolutionId}}",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json"
    },
    post(response) {
      pm.test("Check For Status Code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check Response Values",function() {
        pm.expect(pm.response.json().message).to.eq("No active review process found for BET id 1479665240150");
    });
      pm.environment.set(
        "BearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "RefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    },
  });

  postman[Request]({
    name: "GET Approvals List - ConflictGenerationEntity",
    id: "4e634f8e-3b75-4105-ba5c-c19daa0b11e9",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-approvals/api/review/details/{{EntityId}}",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json"
    },
    post(response) {
      pm.test("Check For Status Code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check Response Values",function() {
        pm.expect(pm.response.json().message).to.eq("No active review process found for BET id 1125583457112");
    });
      pm.environment.set(
        "BearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "RefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    },
    
  });

  postman[Request]({
    name: "GET Approvals List - Input1_CuLevelConflictResolution",
    id: "55fb13bf-2e5c-481c-bfbb-44652ee9bfdf",
    method: "GET",
    address:
      "https://{{TenantName}}.{{BaseURL}}/dsd-orch/nsl-approvals/api/review/details/{{CuId}}",
    headers: {
      "accept-language": "en",
      authorization: "{{BearerToken}}",
      "content-type": "application/json"
    },
    post(response) {
      pm.test("Check For Status Code", function() {
        pm.expect(pm.response.code).to.eq(200);
      });
      pm.test("Check Response Values",function() {
        pm.expect(pm.response.json().message).to.eq("No active review process found for BET id 1217982231832");
    });
      pm.environment.set(
        "BearerToken",
        pm.response.json().result.token_type +
          " " +
          pm.response.json().result.access_token
      );
      pm.environment.set(
        "RefreshToken",
        pm.response.json()["result"]["refresh_token"]
      );
    },
  
  });
}
